// source: messagebroker/subscribe_on_request.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_wrappers_pb = require('google-protobuf/google/protobuf/wrappers_pb.js');
goog.object.extend(proto, google_protobuf_wrappers_pb);
goog.exportSymbol('proto.wavesenterprise.BlockSignature', null, global);
goog.exportSymbol('proto.wavesenterprise.ContractIdFilter', null, global);
goog.exportSymbol('proto.wavesenterprise.CurrentEvent', null, global);
goog.exportSymbol('proto.wavesenterprise.EventsFilter', null, global);
goog.exportSymbol('proto.wavesenterprise.EventsFilter.EventsFilterCase', null, global);
goog.exportSymbol('proto.wavesenterprise.EventsFilter.FilterIn', null, global);
goog.exportSymbol('proto.wavesenterprise.EventsFilter.FilterOut', null, global);
goog.exportSymbol('proto.wavesenterprise.EventsFilter.FilterTypeCase', null, global);
goog.exportSymbol('proto.wavesenterprise.GenesisBlock', null, global);
goog.exportSymbol('proto.wavesenterprise.SubscribeOnRequest', null, global);
goog.exportSymbol('proto.wavesenterprise.SubscribeOnRequest.StartFromCase', null, global);
goog.exportSymbol('proto.wavesenterprise.TxTypeFilter', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wavesenterprise.SubscribeOnRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.wavesenterprise.SubscribeOnRequest.repeatedFields_, proto.wavesenterprise.SubscribeOnRequest.oneofGroups_);
};
goog.inherits(proto.wavesenterprise.SubscribeOnRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wavesenterprise.SubscribeOnRequest.displayName = 'proto.wavesenterprise.SubscribeOnRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wavesenterprise.GenesisBlock = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wavesenterprise.GenesisBlock, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wavesenterprise.GenesisBlock.displayName = 'proto.wavesenterprise.GenesisBlock';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wavesenterprise.BlockSignature = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wavesenterprise.BlockSignature, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wavesenterprise.BlockSignature.displayName = 'proto.wavesenterprise.BlockSignature';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wavesenterprise.CurrentEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wavesenterprise.CurrentEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wavesenterprise.CurrentEvent.displayName = 'proto.wavesenterprise.CurrentEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wavesenterprise.EventsFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.wavesenterprise.EventsFilter.oneofGroups_);
};
goog.inherits(proto.wavesenterprise.EventsFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wavesenterprise.EventsFilter.displayName = 'proto.wavesenterprise.EventsFilter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wavesenterprise.EventsFilter.FilterIn = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wavesenterprise.EventsFilter.FilterIn, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wavesenterprise.EventsFilter.FilterIn.displayName = 'proto.wavesenterprise.EventsFilter.FilterIn';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wavesenterprise.EventsFilter.FilterOut = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wavesenterprise.EventsFilter.FilterOut, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wavesenterprise.EventsFilter.FilterOut.displayName = 'proto.wavesenterprise.EventsFilter.FilterOut';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wavesenterprise.TxTypeFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.wavesenterprise.TxTypeFilter.repeatedFields_, null);
};
goog.inherits(proto.wavesenterprise.TxTypeFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wavesenterprise.TxTypeFilter.displayName = 'proto.wavesenterprise.TxTypeFilter';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wavesenterprise.ContractIdFilter = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.wavesenterprise.ContractIdFilter.repeatedFields_, null);
};
goog.inherits(proto.wavesenterprise.ContractIdFilter, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wavesenterprise.ContractIdFilter.displayName = 'proto.wavesenterprise.ContractIdFilter';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.wavesenterprise.SubscribeOnRequest.repeatedFields_ = [1];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.wavesenterprise.SubscribeOnRequest.oneofGroups_ = [[101,102,103]];

/**
 * @enum {number}
 */
proto.wavesenterprise.SubscribeOnRequest.StartFromCase = {
  START_FROM_NOT_SET: 0,
  GENESIS_BLOCK: 101,
  BLOCK_SIGNATURE: 102,
  CURRENT_EVENT: 103
};

/**
 * @return {proto.wavesenterprise.SubscribeOnRequest.StartFromCase}
 */
proto.wavesenterprise.SubscribeOnRequest.prototype.getStartFromCase = function() {
  return /** @type {proto.wavesenterprise.SubscribeOnRequest.StartFromCase} */(jspb.Message.computeOneofCase(this, proto.wavesenterprise.SubscribeOnRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wavesenterprise.SubscribeOnRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.wavesenterprise.SubscribeOnRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wavesenterprise.SubscribeOnRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wavesenterprise.SubscribeOnRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    genesisBlock: (f = msg.getGenesisBlock()) && proto.wavesenterprise.GenesisBlock.toObject(includeInstance, f),
    blockSignature: (f = msg.getBlockSignature()) && proto.wavesenterprise.BlockSignature.toObject(includeInstance, f),
    currentEvent: (f = msg.getCurrentEvent()) && proto.wavesenterprise.CurrentEvent.toObject(includeInstance, f),
    eventsFiltersList: jspb.Message.toObjectList(msg.getEventsFiltersList(),
    proto.wavesenterprise.EventsFilter.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wavesenterprise.SubscribeOnRequest}
 */
proto.wavesenterprise.SubscribeOnRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wavesenterprise.SubscribeOnRequest;
  return proto.wavesenterprise.SubscribeOnRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wavesenterprise.SubscribeOnRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wavesenterprise.SubscribeOnRequest}
 */
proto.wavesenterprise.SubscribeOnRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 101:
      var value = new proto.wavesenterprise.GenesisBlock;
      reader.readMessage(value,proto.wavesenterprise.GenesisBlock.deserializeBinaryFromReader);
      msg.setGenesisBlock(value);
      break;
    case 102:
      var value = new proto.wavesenterprise.BlockSignature;
      reader.readMessage(value,proto.wavesenterprise.BlockSignature.deserializeBinaryFromReader);
      msg.setBlockSignature(value);
      break;
    case 103:
      var value = new proto.wavesenterprise.CurrentEvent;
      reader.readMessage(value,proto.wavesenterprise.CurrentEvent.deserializeBinaryFromReader);
      msg.setCurrentEvent(value);
      break;
    case 1:
      var value = new proto.wavesenterprise.EventsFilter;
      reader.readMessage(value,proto.wavesenterprise.EventsFilter.deserializeBinaryFromReader);
      msg.addEventsFilters(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wavesenterprise.SubscribeOnRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wavesenterprise.SubscribeOnRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wavesenterprise.SubscribeOnRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wavesenterprise.SubscribeOnRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGenesisBlock();
  if (f != null) {
    writer.writeMessage(
      101,
      f,
      proto.wavesenterprise.GenesisBlock.serializeBinaryToWriter
    );
  }
  f = message.getBlockSignature();
  if (f != null) {
    writer.writeMessage(
      102,
      f,
      proto.wavesenterprise.BlockSignature.serializeBinaryToWriter
    );
  }
  f = message.getCurrentEvent();
  if (f != null) {
    writer.writeMessage(
      103,
      f,
      proto.wavesenterprise.CurrentEvent.serializeBinaryToWriter
    );
  }
  f = message.getEventsFiltersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.wavesenterprise.EventsFilter.serializeBinaryToWriter
    );
  }
};


/**
 * optional GenesisBlock genesis_block = 101;
 * @return {?proto.wavesenterprise.GenesisBlock}
 */
proto.wavesenterprise.SubscribeOnRequest.prototype.getGenesisBlock = function() {
  return /** @type{?proto.wavesenterprise.GenesisBlock} */ (
    jspb.Message.getWrapperField(this, proto.wavesenterprise.GenesisBlock, 101));
};


/**
 * @param {?proto.wavesenterprise.GenesisBlock|undefined} value
 * @return {!proto.wavesenterprise.SubscribeOnRequest} returns this
*/
proto.wavesenterprise.SubscribeOnRequest.prototype.setGenesisBlock = function(value) {
  return jspb.Message.setOneofWrapperField(this, 101, proto.wavesenterprise.SubscribeOnRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wavesenterprise.SubscribeOnRequest} returns this
 */
proto.wavesenterprise.SubscribeOnRequest.prototype.clearGenesisBlock = function() {
  return this.setGenesisBlock(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wavesenterprise.SubscribeOnRequest.prototype.hasGenesisBlock = function() {
  return jspb.Message.getField(this, 101) != null;
};


/**
 * optional BlockSignature block_signature = 102;
 * @return {?proto.wavesenterprise.BlockSignature}
 */
proto.wavesenterprise.SubscribeOnRequest.prototype.getBlockSignature = function() {
  return /** @type{?proto.wavesenterprise.BlockSignature} */ (
    jspb.Message.getWrapperField(this, proto.wavesenterprise.BlockSignature, 102));
};


/**
 * @param {?proto.wavesenterprise.BlockSignature|undefined} value
 * @return {!proto.wavesenterprise.SubscribeOnRequest} returns this
*/
proto.wavesenterprise.SubscribeOnRequest.prototype.setBlockSignature = function(value) {
  return jspb.Message.setOneofWrapperField(this, 102, proto.wavesenterprise.SubscribeOnRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wavesenterprise.SubscribeOnRequest} returns this
 */
proto.wavesenterprise.SubscribeOnRequest.prototype.clearBlockSignature = function() {
  return this.setBlockSignature(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wavesenterprise.SubscribeOnRequest.prototype.hasBlockSignature = function() {
  return jspb.Message.getField(this, 102) != null;
};


/**
 * optional CurrentEvent current_event = 103;
 * @return {?proto.wavesenterprise.CurrentEvent}
 */
proto.wavesenterprise.SubscribeOnRequest.prototype.getCurrentEvent = function() {
  return /** @type{?proto.wavesenterprise.CurrentEvent} */ (
    jspb.Message.getWrapperField(this, proto.wavesenterprise.CurrentEvent, 103));
};


/**
 * @param {?proto.wavesenterprise.CurrentEvent|undefined} value
 * @return {!proto.wavesenterprise.SubscribeOnRequest} returns this
*/
proto.wavesenterprise.SubscribeOnRequest.prototype.setCurrentEvent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 103, proto.wavesenterprise.SubscribeOnRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wavesenterprise.SubscribeOnRequest} returns this
 */
proto.wavesenterprise.SubscribeOnRequest.prototype.clearCurrentEvent = function() {
  return this.setCurrentEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wavesenterprise.SubscribeOnRequest.prototype.hasCurrentEvent = function() {
  return jspb.Message.getField(this, 103) != null;
};


/**
 * repeated EventsFilter events_filters = 1;
 * @return {!Array<!proto.wavesenterprise.EventsFilter>}
 */
proto.wavesenterprise.SubscribeOnRequest.prototype.getEventsFiltersList = function() {
  return /** @type{!Array<!proto.wavesenterprise.EventsFilter>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.wavesenterprise.EventsFilter, 1));
};


/**
 * @param {!Array<!proto.wavesenterprise.EventsFilter>} value
 * @return {!proto.wavesenterprise.SubscribeOnRequest} returns this
*/
proto.wavesenterprise.SubscribeOnRequest.prototype.setEventsFiltersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.wavesenterprise.EventsFilter=} opt_value
 * @param {number=} opt_index
 * @return {!proto.wavesenterprise.EventsFilter}
 */
proto.wavesenterprise.SubscribeOnRequest.prototype.addEventsFilters = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.wavesenterprise.EventsFilter, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.wavesenterprise.SubscribeOnRequest} returns this
 */
proto.wavesenterprise.SubscribeOnRequest.prototype.clearEventsFiltersList = function() {
  return this.setEventsFiltersList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wavesenterprise.GenesisBlock.prototype.toObject = function(opt_includeInstance) {
  return proto.wavesenterprise.GenesisBlock.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wavesenterprise.GenesisBlock} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wavesenterprise.GenesisBlock.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wavesenterprise.GenesisBlock}
 */
proto.wavesenterprise.GenesisBlock.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wavesenterprise.GenesisBlock;
  return proto.wavesenterprise.GenesisBlock.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wavesenterprise.GenesisBlock} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wavesenterprise.GenesisBlock}
 */
proto.wavesenterprise.GenesisBlock.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wavesenterprise.GenesisBlock.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wavesenterprise.GenesisBlock.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wavesenterprise.GenesisBlock} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wavesenterprise.GenesisBlock.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wavesenterprise.BlockSignature.prototype.toObject = function(opt_includeInstance) {
  return proto.wavesenterprise.BlockSignature.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wavesenterprise.BlockSignature} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wavesenterprise.BlockSignature.toObject = function(includeInstance, msg) {
  var f, obj = {
    lastBlockSignature: (f = msg.getLastBlockSignature()) && google_protobuf_wrappers_pb.BytesValue.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wavesenterprise.BlockSignature}
 */
proto.wavesenterprise.BlockSignature.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wavesenterprise.BlockSignature;
  return proto.wavesenterprise.BlockSignature.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wavesenterprise.BlockSignature} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wavesenterprise.BlockSignature}
 */
proto.wavesenterprise.BlockSignature.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_wrappers_pb.BytesValue;
      reader.readMessage(value,google_protobuf_wrappers_pb.BytesValue.deserializeBinaryFromReader);
      msg.setLastBlockSignature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wavesenterprise.BlockSignature.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wavesenterprise.BlockSignature.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wavesenterprise.BlockSignature} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wavesenterprise.BlockSignature.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLastBlockSignature();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_wrappers_pb.BytesValue.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.BytesValue last_block_signature = 1;
 * @return {?proto.google.protobuf.BytesValue}
 */
proto.wavesenterprise.BlockSignature.prototype.getLastBlockSignature = function() {
  return /** @type{?proto.google.protobuf.BytesValue} */ (
    jspb.Message.getWrapperField(this, google_protobuf_wrappers_pb.BytesValue, 1));
};


/**
 * @param {?proto.google.protobuf.BytesValue|undefined} value
 * @return {!proto.wavesenterprise.BlockSignature} returns this
*/
proto.wavesenterprise.BlockSignature.prototype.setLastBlockSignature = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wavesenterprise.BlockSignature} returns this
 */
proto.wavesenterprise.BlockSignature.prototype.clearLastBlockSignature = function() {
  return this.setLastBlockSignature(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wavesenterprise.BlockSignature.prototype.hasLastBlockSignature = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wavesenterprise.CurrentEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.wavesenterprise.CurrentEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wavesenterprise.CurrentEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wavesenterprise.CurrentEvent.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wavesenterprise.CurrentEvent}
 */
proto.wavesenterprise.CurrentEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wavesenterprise.CurrentEvent;
  return proto.wavesenterprise.CurrentEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wavesenterprise.CurrentEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wavesenterprise.CurrentEvent}
 */
proto.wavesenterprise.CurrentEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wavesenterprise.CurrentEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wavesenterprise.CurrentEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wavesenterprise.CurrentEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wavesenterprise.CurrentEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.wavesenterprise.EventsFilter.oneofGroups_ = [[1,2],[101,102]];

/**
 * @enum {number}
 */
proto.wavesenterprise.EventsFilter.FilterTypeCase = {
  FILTER_TYPE_NOT_SET: 0,
  FILTER_IN: 1,
  FILTER_OUT: 2
};

/**
 * @return {proto.wavesenterprise.EventsFilter.FilterTypeCase}
 */
proto.wavesenterprise.EventsFilter.prototype.getFilterTypeCase = function() {
  return /** @type {proto.wavesenterprise.EventsFilter.FilterTypeCase} */(jspb.Message.computeOneofCase(this, proto.wavesenterprise.EventsFilter.oneofGroups_[0]));
};

/**
 * @enum {number}
 */
proto.wavesenterprise.EventsFilter.EventsFilterCase = {
  EVENTS_FILTER_NOT_SET: 0,
  TX_TYPE_FILTER: 101,
  CONTRACT_ID_FILTER: 102
};

/**
 * @return {proto.wavesenterprise.EventsFilter.EventsFilterCase}
 */
proto.wavesenterprise.EventsFilter.prototype.getEventsFilterCase = function() {
  return /** @type {proto.wavesenterprise.EventsFilter.EventsFilterCase} */(jspb.Message.computeOneofCase(this, proto.wavesenterprise.EventsFilter.oneofGroups_[1]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wavesenterprise.EventsFilter.prototype.toObject = function(opt_includeInstance) {
  return proto.wavesenterprise.EventsFilter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wavesenterprise.EventsFilter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wavesenterprise.EventsFilter.toObject = function(includeInstance, msg) {
  var f, obj = {
    filterIn: (f = msg.getFilterIn()) && proto.wavesenterprise.EventsFilter.FilterIn.toObject(includeInstance, f),
    filterOut: (f = msg.getFilterOut()) && proto.wavesenterprise.EventsFilter.FilterOut.toObject(includeInstance, f),
    txTypeFilter: (f = msg.getTxTypeFilter()) && proto.wavesenterprise.TxTypeFilter.toObject(includeInstance, f),
    contractIdFilter: (f = msg.getContractIdFilter()) && proto.wavesenterprise.ContractIdFilter.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wavesenterprise.EventsFilter}
 */
proto.wavesenterprise.EventsFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wavesenterprise.EventsFilter;
  return proto.wavesenterprise.EventsFilter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wavesenterprise.EventsFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wavesenterprise.EventsFilter}
 */
proto.wavesenterprise.EventsFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.wavesenterprise.EventsFilter.FilterIn;
      reader.readMessage(value,proto.wavesenterprise.EventsFilter.FilterIn.deserializeBinaryFromReader);
      msg.setFilterIn(value);
      break;
    case 2:
      var value = new proto.wavesenterprise.EventsFilter.FilterOut;
      reader.readMessage(value,proto.wavesenterprise.EventsFilter.FilterOut.deserializeBinaryFromReader);
      msg.setFilterOut(value);
      break;
    case 101:
      var value = new proto.wavesenterprise.TxTypeFilter;
      reader.readMessage(value,proto.wavesenterprise.TxTypeFilter.deserializeBinaryFromReader);
      msg.setTxTypeFilter(value);
      break;
    case 102:
      var value = new proto.wavesenterprise.ContractIdFilter;
      reader.readMessage(value,proto.wavesenterprise.ContractIdFilter.deserializeBinaryFromReader);
      msg.setContractIdFilter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wavesenterprise.EventsFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wavesenterprise.EventsFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wavesenterprise.EventsFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wavesenterprise.EventsFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFilterIn();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.wavesenterprise.EventsFilter.FilterIn.serializeBinaryToWriter
    );
  }
  f = message.getFilterOut();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.wavesenterprise.EventsFilter.FilterOut.serializeBinaryToWriter
    );
  }
  f = message.getTxTypeFilter();
  if (f != null) {
    writer.writeMessage(
      101,
      f,
      proto.wavesenterprise.TxTypeFilter.serializeBinaryToWriter
    );
  }
  f = message.getContractIdFilter();
  if (f != null) {
    writer.writeMessage(
      102,
      f,
      proto.wavesenterprise.ContractIdFilter.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wavesenterprise.EventsFilter.FilterIn.prototype.toObject = function(opt_includeInstance) {
  return proto.wavesenterprise.EventsFilter.FilterIn.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wavesenterprise.EventsFilter.FilterIn} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wavesenterprise.EventsFilter.FilterIn.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wavesenterprise.EventsFilter.FilterIn}
 */
proto.wavesenterprise.EventsFilter.FilterIn.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wavesenterprise.EventsFilter.FilterIn;
  return proto.wavesenterprise.EventsFilter.FilterIn.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wavesenterprise.EventsFilter.FilterIn} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wavesenterprise.EventsFilter.FilterIn}
 */
proto.wavesenterprise.EventsFilter.FilterIn.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wavesenterprise.EventsFilter.FilterIn.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wavesenterprise.EventsFilter.FilterIn.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wavesenterprise.EventsFilter.FilterIn} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wavesenterprise.EventsFilter.FilterIn.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wavesenterprise.EventsFilter.FilterOut.prototype.toObject = function(opt_includeInstance) {
  return proto.wavesenterprise.EventsFilter.FilterOut.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wavesenterprise.EventsFilter.FilterOut} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wavesenterprise.EventsFilter.FilterOut.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wavesenterprise.EventsFilter.FilterOut}
 */
proto.wavesenterprise.EventsFilter.FilterOut.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wavesenterprise.EventsFilter.FilterOut;
  return proto.wavesenterprise.EventsFilter.FilterOut.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wavesenterprise.EventsFilter.FilterOut} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wavesenterprise.EventsFilter.FilterOut}
 */
proto.wavesenterprise.EventsFilter.FilterOut.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wavesenterprise.EventsFilter.FilterOut.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wavesenterprise.EventsFilter.FilterOut.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wavesenterprise.EventsFilter.FilterOut} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wavesenterprise.EventsFilter.FilterOut.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};


/**
 * optional FilterIn filter_in = 1;
 * @return {?proto.wavesenterprise.EventsFilter.FilterIn}
 */
proto.wavesenterprise.EventsFilter.prototype.getFilterIn = function() {
  return /** @type{?proto.wavesenterprise.EventsFilter.FilterIn} */ (
    jspb.Message.getWrapperField(this, proto.wavesenterprise.EventsFilter.FilterIn, 1));
};


/**
 * @param {?proto.wavesenterprise.EventsFilter.FilterIn|undefined} value
 * @return {!proto.wavesenterprise.EventsFilter} returns this
*/
proto.wavesenterprise.EventsFilter.prototype.setFilterIn = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.wavesenterprise.EventsFilter.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wavesenterprise.EventsFilter} returns this
 */
proto.wavesenterprise.EventsFilter.prototype.clearFilterIn = function() {
  return this.setFilterIn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wavesenterprise.EventsFilter.prototype.hasFilterIn = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional FilterOut filter_out = 2;
 * @return {?proto.wavesenterprise.EventsFilter.FilterOut}
 */
proto.wavesenterprise.EventsFilter.prototype.getFilterOut = function() {
  return /** @type{?proto.wavesenterprise.EventsFilter.FilterOut} */ (
    jspb.Message.getWrapperField(this, proto.wavesenterprise.EventsFilter.FilterOut, 2));
};


/**
 * @param {?proto.wavesenterprise.EventsFilter.FilterOut|undefined} value
 * @return {!proto.wavesenterprise.EventsFilter} returns this
*/
proto.wavesenterprise.EventsFilter.prototype.setFilterOut = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.wavesenterprise.EventsFilter.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wavesenterprise.EventsFilter} returns this
 */
proto.wavesenterprise.EventsFilter.prototype.clearFilterOut = function() {
  return this.setFilterOut(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wavesenterprise.EventsFilter.prototype.hasFilterOut = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional TxTypeFilter tx_type_filter = 101;
 * @return {?proto.wavesenterprise.TxTypeFilter}
 */
proto.wavesenterprise.EventsFilter.prototype.getTxTypeFilter = function() {
  return /** @type{?proto.wavesenterprise.TxTypeFilter} */ (
    jspb.Message.getWrapperField(this, proto.wavesenterprise.TxTypeFilter, 101));
};


/**
 * @param {?proto.wavesenterprise.TxTypeFilter|undefined} value
 * @return {!proto.wavesenterprise.EventsFilter} returns this
*/
proto.wavesenterprise.EventsFilter.prototype.setTxTypeFilter = function(value) {
  return jspb.Message.setOneofWrapperField(this, 101, proto.wavesenterprise.EventsFilter.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wavesenterprise.EventsFilter} returns this
 */
proto.wavesenterprise.EventsFilter.prototype.clearTxTypeFilter = function() {
  return this.setTxTypeFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wavesenterprise.EventsFilter.prototype.hasTxTypeFilter = function() {
  return jspb.Message.getField(this, 101) != null;
};


/**
 * optional ContractIdFilter contract_id_filter = 102;
 * @return {?proto.wavesenterprise.ContractIdFilter}
 */
proto.wavesenterprise.EventsFilter.prototype.getContractIdFilter = function() {
  return /** @type{?proto.wavesenterprise.ContractIdFilter} */ (
    jspb.Message.getWrapperField(this, proto.wavesenterprise.ContractIdFilter, 102));
};


/**
 * @param {?proto.wavesenterprise.ContractIdFilter|undefined} value
 * @return {!proto.wavesenterprise.EventsFilter} returns this
*/
proto.wavesenterprise.EventsFilter.prototype.setContractIdFilter = function(value) {
  return jspb.Message.setOneofWrapperField(this, 102, proto.wavesenterprise.EventsFilter.oneofGroups_[1], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wavesenterprise.EventsFilter} returns this
 */
proto.wavesenterprise.EventsFilter.prototype.clearContractIdFilter = function() {
  return this.setContractIdFilter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wavesenterprise.EventsFilter.prototype.hasContractIdFilter = function() {
  return jspb.Message.getField(this, 102) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.wavesenterprise.TxTypeFilter.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wavesenterprise.TxTypeFilter.prototype.toObject = function(opt_includeInstance) {
  return proto.wavesenterprise.TxTypeFilter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wavesenterprise.TxTypeFilter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wavesenterprise.TxTypeFilter.toObject = function(includeInstance, msg) {
  var f, obj = {
    txTypesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wavesenterprise.TxTypeFilter}
 */
proto.wavesenterprise.TxTypeFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wavesenterprise.TxTypeFilter;
  return proto.wavesenterprise.TxTypeFilter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wavesenterprise.TxTypeFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wavesenterprise.TxTypeFilter}
 */
proto.wavesenterprise.TxTypeFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addTxTypes(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wavesenterprise.TxTypeFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wavesenterprise.TxTypeFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wavesenterprise.TxTypeFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wavesenterprise.TxTypeFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTxTypesList();
  if (f.length > 0) {
    writer.writePackedInt32(
      1,
      f
    );
  }
};


/**
 * repeated int32 tx_types = 1;
 * @return {!Array<number>}
 */
proto.wavesenterprise.TxTypeFilter.prototype.getTxTypesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.wavesenterprise.TxTypeFilter} returns this
 */
proto.wavesenterprise.TxTypeFilter.prototype.setTxTypesList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.wavesenterprise.TxTypeFilter} returns this
 */
proto.wavesenterprise.TxTypeFilter.prototype.addTxTypes = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.wavesenterprise.TxTypeFilter} returns this
 */
proto.wavesenterprise.TxTypeFilter.prototype.clearTxTypesList = function() {
  return this.setTxTypesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.wavesenterprise.ContractIdFilter.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wavesenterprise.ContractIdFilter.prototype.toObject = function(opt_includeInstance) {
  return proto.wavesenterprise.ContractIdFilter.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wavesenterprise.ContractIdFilter} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wavesenterprise.ContractIdFilter.toObject = function(includeInstance, msg) {
  var f, obj = {
    contractIdsList: msg.getContractIdsList_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wavesenterprise.ContractIdFilter}
 */
proto.wavesenterprise.ContractIdFilter.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wavesenterprise.ContractIdFilter;
  return proto.wavesenterprise.ContractIdFilter.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wavesenterprise.ContractIdFilter} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wavesenterprise.ContractIdFilter}
 */
proto.wavesenterprise.ContractIdFilter.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addContractIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wavesenterprise.ContractIdFilter.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wavesenterprise.ContractIdFilter.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wavesenterprise.ContractIdFilter} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wavesenterprise.ContractIdFilter.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContractIdsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      1,
      f
    );
  }
};


/**
 * repeated bytes contract_ids = 1;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.wavesenterprise.ContractIdFilter.prototype.getContractIdsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * repeated bytes contract_ids = 1;
 * This is a type-conversion wrapper around `getContractIdsList()`
 * @return {!Array<string>}
 */
proto.wavesenterprise.ContractIdFilter.prototype.getContractIdsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getContractIdsList()));
};


/**
 * repeated bytes contract_ids = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getContractIdsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.wavesenterprise.ContractIdFilter.prototype.getContractIdsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getContractIdsList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.wavesenterprise.ContractIdFilter} returns this
 */
proto.wavesenterprise.ContractIdFilter.prototype.setContractIdsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.wavesenterprise.ContractIdFilter} returns this
 */
proto.wavesenterprise.ContractIdFilter.prototype.addContractIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.wavesenterprise.ContractIdFilter} returns this
 */
proto.wavesenterprise.ContractIdFilter.prototype.clearContractIdsList = function() {
  return this.setContractIdsList([]);
};


goog.object.extend(exports, proto.wavesenterprise);
