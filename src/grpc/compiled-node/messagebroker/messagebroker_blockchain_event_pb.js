// source: messagebroker/messagebroker_blockchain_event.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var managed_transaction_pb = require('../managed/transaction_pb.js');
goog.object.extend(proto, managed_transaction_pb);
goog.exportSymbol('proto.wavesenterprise.AppendedBlockHistory', null, global);
goog.exportSymbol('proto.wavesenterprise.BlockAppended', null, global);
goog.exportSymbol('proto.wavesenterprise.BlockSignatureNotFoundError', null, global);
goog.exportSymbol('proto.wavesenterprise.BlockchainEvent', null, global);
goog.exportSymbol('proto.wavesenterprise.BlockchainEvent.BlockchainEventCase', null, global);
goog.exportSymbol('proto.wavesenterprise.ErrorEvent', null, global);
goog.exportSymbol('proto.wavesenterprise.ErrorEvent.ErrorEventCase', null, global);
goog.exportSymbol('proto.wavesenterprise.GenericError', null, global);
goog.exportSymbol('proto.wavesenterprise.InvalidApiKey', null, global);
goog.exportSymbol('proto.wavesenterprise.InvalidToken', null, global);
goog.exportSymbol('proto.wavesenterprise.MicroBlockAppended', null, global);
goog.exportSymbol('proto.wavesenterprise.MissingAuthorizationMetadata', null, global);
goog.exportSymbol('proto.wavesenterprise.MissingRequiredRequestField', null, global);
goog.exportSymbol('proto.wavesenterprise.RollbackCompleted', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wavesenterprise.BlockchainEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.wavesenterprise.BlockchainEvent.oneofGroups_);
};
goog.inherits(proto.wavesenterprise.BlockchainEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wavesenterprise.BlockchainEvent.displayName = 'proto.wavesenterprise.BlockchainEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wavesenterprise.ErrorEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, 500, null, proto.wavesenterprise.ErrorEvent.oneofGroups_);
};
goog.inherits(proto.wavesenterprise.ErrorEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wavesenterprise.ErrorEvent.displayName = 'proto.wavesenterprise.ErrorEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wavesenterprise.GenericError = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wavesenterprise.GenericError, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wavesenterprise.GenericError.displayName = 'proto.wavesenterprise.GenericError';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wavesenterprise.BlockSignatureNotFoundError = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wavesenterprise.BlockSignatureNotFoundError, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wavesenterprise.BlockSignatureNotFoundError.displayName = 'proto.wavesenterprise.BlockSignatureNotFoundError';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wavesenterprise.MissingRequiredRequestField = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wavesenterprise.MissingRequiredRequestField, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wavesenterprise.MissingRequiredRequestField.displayName = 'proto.wavesenterprise.MissingRequiredRequestField';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wavesenterprise.MissingAuthorizationMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wavesenterprise.MissingAuthorizationMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wavesenterprise.MissingAuthorizationMetadata.displayName = 'proto.wavesenterprise.MissingAuthorizationMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wavesenterprise.InvalidApiKey = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wavesenterprise.InvalidApiKey, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wavesenterprise.InvalidApiKey.displayName = 'proto.wavesenterprise.InvalidApiKey';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wavesenterprise.InvalidToken = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.wavesenterprise.InvalidToken, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wavesenterprise.InvalidToken.displayName = 'proto.wavesenterprise.InvalidToken';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wavesenterprise.MicroBlockAppended = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.wavesenterprise.MicroBlockAppended.repeatedFields_, null);
};
goog.inherits(proto.wavesenterprise.MicroBlockAppended, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wavesenterprise.MicroBlockAppended.displayName = 'proto.wavesenterprise.MicroBlockAppended';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wavesenterprise.BlockAppended = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.wavesenterprise.BlockAppended.repeatedFields_, null);
};
goog.inherits(proto.wavesenterprise.BlockAppended, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wavesenterprise.BlockAppended.displayName = 'proto.wavesenterprise.BlockAppended';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wavesenterprise.RollbackCompleted = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.wavesenterprise.RollbackCompleted.repeatedFields_, null);
};
goog.inherits(proto.wavesenterprise.RollbackCompleted, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wavesenterprise.RollbackCompleted.displayName = 'proto.wavesenterprise.RollbackCompleted';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.wavesenterprise.AppendedBlockHistory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.wavesenterprise.AppendedBlockHistory.repeatedFields_, null);
};
goog.inherits(proto.wavesenterprise.AppendedBlockHistory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.wavesenterprise.AppendedBlockHistory.displayName = 'proto.wavesenterprise.AppendedBlockHistory';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.wavesenterprise.BlockchainEvent.oneofGroups_ = [[1,2,3,4,5]];

/**
 * @enum {number}
 */
proto.wavesenterprise.BlockchainEvent.BlockchainEventCase = {
  BLOCKCHAIN_EVENT_NOT_SET: 0,
  ERROR_EVENT: 1,
  MICRO_BLOCK_APPENDED: 2,
  BLOCK_APPENDED: 3,
  ROLLBACK_COMPLETED: 4,
  APPENDED_BLOCK_HISTORY: 5
};

/**
 * @return {proto.wavesenterprise.BlockchainEvent.BlockchainEventCase}
 */
proto.wavesenterprise.BlockchainEvent.prototype.getBlockchainEventCase = function() {
  return /** @type {proto.wavesenterprise.BlockchainEvent.BlockchainEventCase} */(jspb.Message.computeOneofCase(this, proto.wavesenterprise.BlockchainEvent.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wavesenterprise.BlockchainEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.wavesenterprise.BlockchainEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wavesenterprise.BlockchainEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wavesenterprise.BlockchainEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    errorEvent: (f = msg.getErrorEvent()) && proto.wavesenterprise.ErrorEvent.toObject(includeInstance, f),
    microBlockAppended: (f = msg.getMicroBlockAppended()) && proto.wavesenterprise.MicroBlockAppended.toObject(includeInstance, f),
    blockAppended: (f = msg.getBlockAppended()) && proto.wavesenterprise.BlockAppended.toObject(includeInstance, f),
    rollbackCompleted: (f = msg.getRollbackCompleted()) && proto.wavesenterprise.RollbackCompleted.toObject(includeInstance, f),
    appendedBlockHistory: (f = msg.getAppendedBlockHistory()) && proto.wavesenterprise.AppendedBlockHistory.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wavesenterprise.BlockchainEvent}
 */
proto.wavesenterprise.BlockchainEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wavesenterprise.BlockchainEvent;
  return proto.wavesenterprise.BlockchainEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wavesenterprise.BlockchainEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wavesenterprise.BlockchainEvent}
 */
proto.wavesenterprise.BlockchainEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.wavesenterprise.ErrorEvent;
      reader.readMessage(value,proto.wavesenterprise.ErrorEvent.deserializeBinaryFromReader);
      msg.setErrorEvent(value);
      break;
    case 2:
      var value = new proto.wavesenterprise.MicroBlockAppended;
      reader.readMessage(value,proto.wavesenterprise.MicroBlockAppended.deserializeBinaryFromReader);
      msg.setMicroBlockAppended(value);
      break;
    case 3:
      var value = new proto.wavesenterprise.BlockAppended;
      reader.readMessage(value,proto.wavesenterprise.BlockAppended.deserializeBinaryFromReader);
      msg.setBlockAppended(value);
      break;
    case 4:
      var value = new proto.wavesenterprise.RollbackCompleted;
      reader.readMessage(value,proto.wavesenterprise.RollbackCompleted.deserializeBinaryFromReader);
      msg.setRollbackCompleted(value);
      break;
    case 5:
      var value = new proto.wavesenterprise.AppendedBlockHistory;
      reader.readMessage(value,proto.wavesenterprise.AppendedBlockHistory.deserializeBinaryFromReader);
      msg.setAppendedBlockHistory(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wavesenterprise.BlockchainEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wavesenterprise.BlockchainEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wavesenterprise.BlockchainEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wavesenterprise.BlockchainEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErrorEvent();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.wavesenterprise.ErrorEvent.serializeBinaryToWriter
    );
  }
  f = message.getMicroBlockAppended();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.wavesenterprise.MicroBlockAppended.serializeBinaryToWriter
    );
  }
  f = message.getBlockAppended();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.wavesenterprise.BlockAppended.serializeBinaryToWriter
    );
  }
  f = message.getRollbackCompleted();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.wavesenterprise.RollbackCompleted.serializeBinaryToWriter
    );
  }
  f = message.getAppendedBlockHistory();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.wavesenterprise.AppendedBlockHistory.serializeBinaryToWriter
    );
  }
};


/**
 * optional ErrorEvent error_event = 1;
 * @return {?proto.wavesenterprise.ErrorEvent}
 */
proto.wavesenterprise.BlockchainEvent.prototype.getErrorEvent = function() {
  return /** @type{?proto.wavesenterprise.ErrorEvent} */ (
    jspb.Message.getWrapperField(this, proto.wavesenterprise.ErrorEvent, 1));
};


/**
 * @param {?proto.wavesenterprise.ErrorEvent|undefined} value
 * @return {!proto.wavesenterprise.BlockchainEvent} returns this
*/
proto.wavesenterprise.BlockchainEvent.prototype.setErrorEvent = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.wavesenterprise.BlockchainEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wavesenterprise.BlockchainEvent} returns this
 */
proto.wavesenterprise.BlockchainEvent.prototype.clearErrorEvent = function() {
  return this.setErrorEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wavesenterprise.BlockchainEvent.prototype.hasErrorEvent = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional MicroBlockAppended micro_block_appended = 2;
 * @return {?proto.wavesenterprise.MicroBlockAppended}
 */
proto.wavesenterprise.BlockchainEvent.prototype.getMicroBlockAppended = function() {
  return /** @type{?proto.wavesenterprise.MicroBlockAppended} */ (
    jspb.Message.getWrapperField(this, proto.wavesenterprise.MicroBlockAppended, 2));
};


/**
 * @param {?proto.wavesenterprise.MicroBlockAppended|undefined} value
 * @return {!proto.wavesenterprise.BlockchainEvent} returns this
*/
proto.wavesenterprise.BlockchainEvent.prototype.setMicroBlockAppended = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.wavesenterprise.BlockchainEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wavesenterprise.BlockchainEvent} returns this
 */
proto.wavesenterprise.BlockchainEvent.prototype.clearMicroBlockAppended = function() {
  return this.setMicroBlockAppended(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wavesenterprise.BlockchainEvent.prototype.hasMicroBlockAppended = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional BlockAppended block_appended = 3;
 * @return {?proto.wavesenterprise.BlockAppended}
 */
proto.wavesenterprise.BlockchainEvent.prototype.getBlockAppended = function() {
  return /** @type{?proto.wavesenterprise.BlockAppended} */ (
    jspb.Message.getWrapperField(this, proto.wavesenterprise.BlockAppended, 3));
};


/**
 * @param {?proto.wavesenterprise.BlockAppended|undefined} value
 * @return {!proto.wavesenterprise.BlockchainEvent} returns this
*/
proto.wavesenterprise.BlockchainEvent.prototype.setBlockAppended = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.wavesenterprise.BlockchainEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wavesenterprise.BlockchainEvent} returns this
 */
proto.wavesenterprise.BlockchainEvent.prototype.clearBlockAppended = function() {
  return this.setBlockAppended(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wavesenterprise.BlockchainEvent.prototype.hasBlockAppended = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional RollbackCompleted rollback_completed = 4;
 * @return {?proto.wavesenterprise.RollbackCompleted}
 */
proto.wavesenterprise.BlockchainEvent.prototype.getRollbackCompleted = function() {
  return /** @type{?proto.wavesenterprise.RollbackCompleted} */ (
    jspb.Message.getWrapperField(this, proto.wavesenterprise.RollbackCompleted, 4));
};


/**
 * @param {?proto.wavesenterprise.RollbackCompleted|undefined} value
 * @return {!proto.wavesenterprise.BlockchainEvent} returns this
*/
proto.wavesenterprise.BlockchainEvent.prototype.setRollbackCompleted = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.wavesenterprise.BlockchainEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wavesenterprise.BlockchainEvent} returns this
 */
proto.wavesenterprise.BlockchainEvent.prototype.clearRollbackCompleted = function() {
  return this.setRollbackCompleted(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wavesenterprise.BlockchainEvent.prototype.hasRollbackCompleted = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional AppendedBlockHistory appended_block_history = 5;
 * @return {?proto.wavesenterprise.AppendedBlockHistory}
 */
proto.wavesenterprise.BlockchainEvent.prototype.getAppendedBlockHistory = function() {
  return /** @type{?proto.wavesenterprise.AppendedBlockHistory} */ (
    jspb.Message.getWrapperField(this, proto.wavesenterprise.AppendedBlockHistory, 5));
};


/**
 * @param {?proto.wavesenterprise.AppendedBlockHistory|undefined} value
 * @return {!proto.wavesenterprise.BlockchainEvent} returns this
*/
proto.wavesenterprise.BlockchainEvent.prototype.setAppendedBlockHistory = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.wavesenterprise.BlockchainEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wavesenterprise.BlockchainEvent} returns this
 */
proto.wavesenterprise.BlockchainEvent.prototype.clearAppendedBlockHistory = function() {
  return this.setAppendedBlockHistory(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wavesenterprise.BlockchainEvent.prototype.hasAppendedBlockHistory = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.wavesenterprise.ErrorEvent.oneofGroups_ = [[1001,1002,1003,1004,1005,1006]];

/**
 * @enum {number}
 */
proto.wavesenterprise.ErrorEvent.ErrorEventCase = {
  ERROR_EVENT_NOT_SET: 0,
  GENERIC_ERROR: 1001,
  MISSING_REQUIRED_REQUEST_FIELD: 1002,
  BLOCK_SIGNATURE_NOT_FOUND_ERROR: 1003,
  MISSING_AUTHORIZATION_METADATA: 1004,
  INVALID_API_KEY: 1005,
  INVALID_TOKEN: 1006
};

/**
 * @return {proto.wavesenterprise.ErrorEvent.ErrorEventCase}
 */
proto.wavesenterprise.ErrorEvent.prototype.getErrorEventCase = function() {
  return /** @type {proto.wavesenterprise.ErrorEvent.ErrorEventCase} */(jspb.Message.computeOneofCase(this, proto.wavesenterprise.ErrorEvent.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wavesenterprise.ErrorEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.wavesenterprise.ErrorEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wavesenterprise.ErrorEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wavesenterprise.ErrorEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    genericError: (f = msg.getGenericError()) && proto.wavesenterprise.GenericError.toObject(includeInstance, f),
    missingRequiredRequestField: (f = msg.getMissingRequiredRequestField()) && proto.wavesenterprise.MissingRequiredRequestField.toObject(includeInstance, f),
    blockSignatureNotFoundError: (f = msg.getBlockSignatureNotFoundError()) && proto.wavesenterprise.BlockSignatureNotFoundError.toObject(includeInstance, f),
    missingAuthorizationMetadata: (f = msg.getMissingAuthorizationMetadata()) && proto.wavesenterprise.MissingAuthorizationMetadata.toObject(includeInstance, f),
    invalidApiKey: (f = msg.getInvalidApiKey()) && proto.wavesenterprise.InvalidApiKey.toObject(includeInstance, f),
    invalidToken: (f = msg.getInvalidToken()) && proto.wavesenterprise.InvalidToken.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wavesenterprise.ErrorEvent}
 */
proto.wavesenterprise.ErrorEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wavesenterprise.ErrorEvent;
  return proto.wavesenterprise.ErrorEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wavesenterprise.ErrorEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wavesenterprise.ErrorEvent}
 */
proto.wavesenterprise.ErrorEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 1001:
      var value = new proto.wavesenterprise.GenericError;
      reader.readMessage(value,proto.wavesenterprise.GenericError.deserializeBinaryFromReader);
      msg.setGenericError(value);
      break;
    case 1002:
      var value = new proto.wavesenterprise.MissingRequiredRequestField;
      reader.readMessage(value,proto.wavesenterprise.MissingRequiredRequestField.deserializeBinaryFromReader);
      msg.setMissingRequiredRequestField(value);
      break;
    case 1003:
      var value = new proto.wavesenterprise.BlockSignatureNotFoundError;
      reader.readMessage(value,proto.wavesenterprise.BlockSignatureNotFoundError.deserializeBinaryFromReader);
      msg.setBlockSignatureNotFoundError(value);
      break;
    case 1004:
      var value = new proto.wavesenterprise.MissingAuthorizationMetadata;
      reader.readMessage(value,proto.wavesenterprise.MissingAuthorizationMetadata.deserializeBinaryFromReader);
      msg.setMissingAuthorizationMetadata(value);
      break;
    case 1005:
      var value = new proto.wavesenterprise.InvalidApiKey;
      reader.readMessage(value,proto.wavesenterprise.InvalidApiKey.deserializeBinaryFromReader);
      msg.setInvalidApiKey(value);
      break;
    case 1006:
      var value = new proto.wavesenterprise.InvalidToken;
      reader.readMessage(value,proto.wavesenterprise.InvalidToken.deserializeBinaryFromReader);
      msg.setInvalidToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wavesenterprise.ErrorEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wavesenterprise.ErrorEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wavesenterprise.ErrorEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wavesenterprise.ErrorEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getGenericError();
  if (f != null) {
    writer.writeMessage(
      1001,
      f,
      proto.wavesenterprise.GenericError.serializeBinaryToWriter
    );
  }
  f = message.getMissingRequiredRequestField();
  if (f != null) {
    writer.writeMessage(
      1002,
      f,
      proto.wavesenterprise.MissingRequiredRequestField.serializeBinaryToWriter
    );
  }
  f = message.getBlockSignatureNotFoundError();
  if (f != null) {
    writer.writeMessage(
      1003,
      f,
      proto.wavesenterprise.BlockSignatureNotFoundError.serializeBinaryToWriter
    );
  }
  f = message.getMissingAuthorizationMetadata();
  if (f != null) {
    writer.writeMessage(
      1004,
      f,
      proto.wavesenterprise.MissingAuthorizationMetadata.serializeBinaryToWriter
    );
  }
  f = message.getInvalidApiKey();
  if (f != null) {
    writer.writeMessage(
      1005,
      f,
      proto.wavesenterprise.InvalidApiKey.serializeBinaryToWriter
    );
  }
  f = message.getInvalidToken();
  if (f != null) {
    writer.writeMessage(
      1006,
      f,
      proto.wavesenterprise.InvalidToken.serializeBinaryToWriter
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.wavesenterprise.ErrorEvent.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.wavesenterprise.ErrorEvent} returns this
 */
proto.wavesenterprise.ErrorEvent.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.wavesenterprise.ErrorEvent.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.wavesenterprise.ErrorEvent} returns this
 */
proto.wavesenterprise.ErrorEvent.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional GenericError generic_error = 1001;
 * @return {?proto.wavesenterprise.GenericError}
 */
proto.wavesenterprise.ErrorEvent.prototype.getGenericError = function() {
  return /** @type{?proto.wavesenterprise.GenericError} */ (
    jspb.Message.getWrapperField(this, proto.wavesenterprise.GenericError, 1001));
};


/**
 * @param {?proto.wavesenterprise.GenericError|undefined} value
 * @return {!proto.wavesenterprise.ErrorEvent} returns this
*/
proto.wavesenterprise.ErrorEvent.prototype.setGenericError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1001, proto.wavesenterprise.ErrorEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wavesenterprise.ErrorEvent} returns this
 */
proto.wavesenterprise.ErrorEvent.prototype.clearGenericError = function() {
  return this.setGenericError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wavesenterprise.ErrorEvent.prototype.hasGenericError = function() {
  return jspb.Message.getField(this, 1001) != null;
};


/**
 * optional MissingRequiredRequestField missing_required_request_field = 1002;
 * @return {?proto.wavesenterprise.MissingRequiredRequestField}
 */
proto.wavesenterprise.ErrorEvent.prototype.getMissingRequiredRequestField = function() {
  return /** @type{?proto.wavesenterprise.MissingRequiredRequestField} */ (
    jspb.Message.getWrapperField(this, proto.wavesenterprise.MissingRequiredRequestField, 1002));
};


/**
 * @param {?proto.wavesenterprise.MissingRequiredRequestField|undefined} value
 * @return {!proto.wavesenterprise.ErrorEvent} returns this
*/
proto.wavesenterprise.ErrorEvent.prototype.setMissingRequiredRequestField = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1002, proto.wavesenterprise.ErrorEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wavesenterprise.ErrorEvent} returns this
 */
proto.wavesenterprise.ErrorEvent.prototype.clearMissingRequiredRequestField = function() {
  return this.setMissingRequiredRequestField(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wavesenterprise.ErrorEvent.prototype.hasMissingRequiredRequestField = function() {
  return jspb.Message.getField(this, 1002) != null;
};


/**
 * optional BlockSignatureNotFoundError block_signature_not_found_error = 1003;
 * @return {?proto.wavesenterprise.BlockSignatureNotFoundError}
 */
proto.wavesenterprise.ErrorEvent.prototype.getBlockSignatureNotFoundError = function() {
  return /** @type{?proto.wavesenterprise.BlockSignatureNotFoundError} */ (
    jspb.Message.getWrapperField(this, proto.wavesenterprise.BlockSignatureNotFoundError, 1003));
};


/**
 * @param {?proto.wavesenterprise.BlockSignatureNotFoundError|undefined} value
 * @return {!proto.wavesenterprise.ErrorEvent} returns this
*/
proto.wavesenterprise.ErrorEvent.prototype.setBlockSignatureNotFoundError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1003, proto.wavesenterprise.ErrorEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wavesenterprise.ErrorEvent} returns this
 */
proto.wavesenterprise.ErrorEvent.prototype.clearBlockSignatureNotFoundError = function() {
  return this.setBlockSignatureNotFoundError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wavesenterprise.ErrorEvent.prototype.hasBlockSignatureNotFoundError = function() {
  return jspb.Message.getField(this, 1003) != null;
};


/**
 * optional MissingAuthorizationMetadata missing_authorization_metadata = 1004;
 * @return {?proto.wavesenterprise.MissingAuthorizationMetadata}
 */
proto.wavesenterprise.ErrorEvent.prototype.getMissingAuthorizationMetadata = function() {
  return /** @type{?proto.wavesenterprise.MissingAuthorizationMetadata} */ (
    jspb.Message.getWrapperField(this, proto.wavesenterprise.MissingAuthorizationMetadata, 1004));
};


/**
 * @param {?proto.wavesenterprise.MissingAuthorizationMetadata|undefined} value
 * @return {!proto.wavesenterprise.ErrorEvent} returns this
*/
proto.wavesenterprise.ErrorEvent.prototype.setMissingAuthorizationMetadata = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1004, proto.wavesenterprise.ErrorEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wavesenterprise.ErrorEvent} returns this
 */
proto.wavesenterprise.ErrorEvent.prototype.clearMissingAuthorizationMetadata = function() {
  return this.setMissingAuthorizationMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wavesenterprise.ErrorEvent.prototype.hasMissingAuthorizationMetadata = function() {
  return jspb.Message.getField(this, 1004) != null;
};


/**
 * optional InvalidApiKey invalid_api_key = 1005;
 * @return {?proto.wavesenterprise.InvalidApiKey}
 */
proto.wavesenterprise.ErrorEvent.prototype.getInvalidApiKey = function() {
  return /** @type{?proto.wavesenterprise.InvalidApiKey} */ (
    jspb.Message.getWrapperField(this, proto.wavesenterprise.InvalidApiKey, 1005));
};


/**
 * @param {?proto.wavesenterprise.InvalidApiKey|undefined} value
 * @return {!proto.wavesenterprise.ErrorEvent} returns this
*/
proto.wavesenterprise.ErrorEvent.prototype.setInvalidApiKey = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1005, proto.wavesenterprise.ErrorEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wavesenterprise.ErrorEvent} returns this
 */
proto.wavesenterprise.ErrorEvent.prototype.clearInvalidApiKey = function() {
  return this.setInvalidApiKey(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wavesenterprise.ErrorEvent.prototype.hasInvalidApiKey = function() {
  return jspb.Message.getField(this, 1005) != null;
};


/**
 * optional InvalidToken invalid_token = 1006;
 * @return {?proto.wavesenterprise.InvalidToken}
 */
proto.wavesenterprise.ErrorEvent.prototype.getInvalidToken = function() {
  return /** @type{?proto.wavesenterprise.InvalidToken} */ (
    jspb.Message.getWrapperField(this, proto.wavesenterprise.InvalidToken, 1006));
};


/**
 * @param {?proto.wavesenterprise.InvalidToken|undefined} value
 * @return {!proto.wavesenterprise.ErrorEvent} returns this
*/
proto.wavesenterprise.ErrorEvent.prototype.setInvalidToken = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1006, proto.wavesenterprise.ErrorEvent.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.wavesenterprise.ErrorEvent} returns this
 */
proto.wavesenterprise.ErrorEvent.prototype.clearInvalidToken = function() {
  return this.setInvalidToken(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.wavesenterprise.ErrorEvent.prototype.hasInvalidToken = function() {
  return jspb.Message.getField(this, 1006) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wavesenterprise.GenericError.prototype.toObject = function(opt_includeInstance) {
  return proto.wavesenterprise.GenericError.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wavesenterprise.GenericError} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wavesenterprise.GenericError.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wavesenterprise.GenericError}
 */
proto.wavesenterprise.GenericError.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wavesenterprise.GenericError;
  return proto.wavesenterprise.GenericError.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wavesenterprise.GenericError} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wavesenterprise.GenericError}
 */
proto.wavesenterprise.GenericError.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wavesenterprise.GenericError.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wavesenterprise.GenericError.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wavesenterprise.GenericError} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wavesenterprise.GenericError.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wavesenterprise.BlockSignatureNotFoundError.prototype.toObject = function(opt_includeInstance) {
  return proto.wavesenterprise.BlockSignatureNotFoundError.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wavesenterprise.BlockSignatureNotFoundError} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wavesenterprise.BlockSignatureNotFoundError.toObject = function(includeInstance, msg) {
  var f, obj = {
    blockSignature: msg.getBlockSignature_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wavesenterprise.BlockSignatureNotFoundError}
 */
proto.wavesenterprise.BlockSignatureNotFoundError.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wavesenterprise.BlockSignatureNotFoundError;
  return proto.wavesenterprise.BlockSignatureNotFoundError.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wavesenterprise.BlockSignatureNotFoundError} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wavesenterprise.BlockSignatureNotFoundError}
 */
proto.wavesenterprise.BlockSignatureNotFoundError.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBlockSignature(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wavesenterprise.BlockSignatureNotFoundError.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wavesenterprise.BlockSignatureNotFoundError.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wavesenterprise.BlockSignatureNotFoundError} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wavesenterprise.BlockSignatureNotFoundError.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBlockSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes block_signature = 1;
 * @return {!(string|Uint8Array)}
 */
proto.wavesenterprise.BlockSignatureNotFoundError.prototype.getBlockSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes block_signature = 1;
 * This is a type-conversion wrapper around `getBlockSignature()`
 * @return {string}
 */
proto.wavesenterprise.BlockSignatureNotFoundError.prototype.getBlockSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBlockSignature()));
};


/**
 * optional bytes block_signature = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBlockSignature()`
 * @return {!Uint8Array}
 */
proto.wavesenterprise.BlockSignatureNotFoundError.prototype.getBlockSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBlockSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.wavesenterprise.BlockSignatureNotFoundError} returns this
 */
proto.wavesenterprise.BlockSignatureNotFoundError.prototype.setBlockSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wavesenterprise.MissingRequiredRequestField.prototype.toObject = function(opt_includeInstance) {
  return proto.wavesenterprise.MissingRequiredRequestField.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wavesenterprise.MissingRequiredRequestField} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wavesenterprise.MissingRequiredRequestField.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wavesenterprise.MissingRequiredRequestField}
 */
proto.wavesenterprise.MissingRequiredRequestField.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wavesenterprise.MissingRequiredRequestField;
  return proto.wavesenterprise.MissingRequiredRequestField.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wavesenterprise.MissingRequiredRequestField} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wavesenterprise.MissingRequiredRequestField}
 */
proto.wavesenterprise.MissingRequiredRequestField.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wavesenterprise.MissingRequiredRequestField.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wavesenterprise.MissingRequiredRequestField.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wavesenterprise.MissingRequiredRequestField} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wavesenterprise.MissingRequiredRequestField.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wavesenterprise.MissingAuthorizationMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.wavesenterprise.MissingAuthorizationMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wavesenterprise.MissingAuthorizationMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wavesenterprise.MissingAuthorizationMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wavesenterprise.MissingAuthorizationMetadata}
 */
proto.wavesenterprise.MissingAuthorizationMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wavesenterprise.MissingAuthorizationMetadata;
  return proto.wavesenterprise.MissingAuthorizationMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wavesenterprise.MissingAuthorizationMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wavesenterprise.MissingAuthorizationMetadata}
 */
proto.wavesenterprise.MissingAuthorizationMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wavesenterprise.MissingAuthorizationMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wavesenterprise.MissingAuthorizationMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wavesenterprise.MissingAuthorizationMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wavesenterprise.MissingAuthorizationMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wavesenterprise.InvalidApiKey.prototype.toObject = function(opt_includeInstance) {
  return proto.wavesenterprise.InvalidApiKey.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wavesenterprise.InvalidApiKey} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wavesenterprise.InvalidApiKey.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wavesenterprise.InvalidApiKey}
 */
proto.wavesenterprise.InvalidApiKey.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wavesenterprise.InvalidApiKey;
  return proto.wavesenterprise.InvalidApiKey.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wavesenterprise.InvalidApiKey} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wavesenterprise.InvalidApiKey}
 */
proto.wavesenterprise.InvalidApiKey.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wavesenterprise.InvalidApiKey.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wavesenterprise.InvalidApiKey.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wavesenterprise.InvalidApiKey} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wavesenterprise.InvalidApiKey.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wavesenterprise.InvalidToken.prototype.toObject = function(opt_includeInstance) {
  return proto.wavesenterprise.InvalidToken.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wavesenterprise.InvalidToken} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wavesenterprise.InvalidToken.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wavesenterprise.InvalidToken}
 */
proto.wavesenterprise.InvalidToken.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wavesenterprise.InvalidToken;
  return proto.wavesenterprise.InvalidToken.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wavesenterprise.InvalidToken} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wavesenterprise.InvalidToken}
 */
proto.wavesenterprise.InvalidToken.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wavesenterprise.InvalidToken.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wavesenterprise.InvalidToken.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wavesenterprise.InvalidToken} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wavesenterprise.InvalidToken.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.wavesenterprise.MicroBlockAppended.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wavesenterprise.MicroBlockAppended.prototype.toObject = function(opt_includeInstance) {
  return proto.wavesenterprise.MicroBlockAppended.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wavesenterprise.MicroBlockAppended} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wavesenterprise.MicroBlockAppended.toObject = function(includeInstance, msg) {
  var f, obj = {
    txsList: jspb.Message.toObjectList(msg.getTxsList(),
    managed_transaction_pb.Transaction.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wavesenterprise.MicroBlockAppended}
 */
proto.wavesenterprise.MicroBlockAppended.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wavesenterprise.MicroBlockAppended;
  return proto.wavesenterprise.MicroBlockAppended.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wavesenterprise.MicroBlockAppended} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wavesenterprise.MicroBlockAppended}
 */
proto.wavesenterprise.MicroBlockAppended.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new managed_transaction_pb.Transaction;
      reader.readMessage(value,managed_transaction_pb.Transaction.deserializeBinaryFromReader);
      msg.addTxs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wavesenterprise.MicroBlockAppended.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wavesenterprise.MicroBlockAppended.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wavesenterprise.MicroBlockAppended} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wavesenterprise.MicroBlockAppended.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTxsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      managed_transaction_pb.Transaction.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Transaction txs = 1;
 * @return {!Array<!proto.wavesenterprise.Transaction>}
 */
proto.wavesenterprise.MicroBlockAppended.prototype.getTxsList = function() {
  return /** @type{!Array<!proto.wavesenterprise.Transaction>} */ (
    jspb.Message.getRepeatedWrapperField(this, managed_transaction_pb.Transaction, 1));
};


/**
 * @param {!Array<!proto.wavesenterprise.Transaction>} value
 * @return {!proto.wavesenterprise.MicroBlockAppended} returns this
*/
proto.wavesenterprise.MicroBlockAppended.prototype.setTxsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.wavesenterprise.Transaction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.wavesenterprise.Transaction}
 */
proto.wavesenterprise.MicroBlockAppended.prototype.addTxs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.wavesenterprise.Transaction, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.wavesenterprise.MicroBlockAppended} returns this
 */
proto.wavesenterprise.MicroBlockAppended.prototype.clearTxsList = function() {
  return this.setTxsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.wavesenterprise.BlockAppended.repeatedFields_ = [3,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wavesenterprise.BlockAppended.prototype.toObject = function(opt_includeInstance) {
  return proto.wavesenterprise.BlockAppended.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wavesenterprise.BlockAppended} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wavesenterprise.BlockAppended.toObject = function(includeInstance, msg) {
  var f, obj = {
    blockSignature: msg.getBlockSignature_asB64(),
    reference: msg.getReference_asB64(),
    txIdsList: msg.getTxIdsList_asB64(),
    minerAddress: msg.getMinerAddress_asB64(),
    height: jspb.Message.getFieldWithDefault(msg, 5, 0),
    version: jspb.Message.getFieldWithDefault(msg, 6, 0),
    timestamp: jspb.Message.getFieldWithDefault(msg, 7, 0),
    fee: jspb.Message.getFieldWithDefault(msg, 8, 0),
    blockSize: jspb.Message.getFieldWithDefault(msg, 9, 0),
    featuresList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wavesenterprise.BlockAppended}
 */
proto.wavesenterprise.BlockAppended.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wavesenterprise.BlockAppended;
  return proto.wavesenterprise.BlockAppended.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wavesenterprise.BlockAppended} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wavesenterprise.BlockAppended}
 */
proto.wavesenterprise.BlockAppended.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBlockSignature(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setReference(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addTxIds(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMinerAddress(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHeight(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersion(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFee(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBlockSize(value);
      break;
    case 10:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addFeatures(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wavesenterprise.BlockAppended.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wavesenterprise.BlockAppended.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wavesenterprise.BlockAppended} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wavesenterprise.BlockAppended.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBlockSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getReference_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getTxIdsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      3,
      f
    );
  }
  f = message.getMinerAddress_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getFee();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getBlockSize();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getFeaturesList();
  if (f.length > 0) {
    writer.writePackedInt32(
      10,
      f
    );
  }
};


/**
 * optional bytes block_signature = 1;
 * @return {!(string|Uint8Array)}
 */
proto.wavesenterprise.BlockAppended.prototype.getBlockSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes block_signature = 1;
 * This is a type-conversion wrapper around `getBlockSignature()`
 * @return {string}
 */
proto.wavesenterprise.BlockAppended.prototype.getBlockSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBlockSignature()));
};


/**
 * optional bytes block_signature = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBlockSignature()`
 * @return {!Uint8Array}
 */
proto.wavesenterprise.BlockAppended.prototype.getBlockSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBlockSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.wavesenterprise.BlockAppended} returns this
 */
proto.wavesenterprise.BlockAppended.prototype.setBlockSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes reference = 2;
 * @return {!(string|Uint8Array)}
 */
proto.wavesenterprise.BlockAppended.prototype.getReference = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes reference = 2;
 * This is a type-conversion wrapper around `getReference()`
 * @return {string}
 */
proto.wavesenterprise.BlockAppended.prototype.getReference_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getReference()));
};


/**
 * optional bytes reference = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getReference()`
 * @return {!Uint8Array}
 */
proto.wavesenterprise.BlockAppended.prototype.getReference_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getReference()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.wavesenterprise.BlockAppended} returns this
 */
proto.wavesenterprise.BlockAppended.prototype.setReference = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * repeated bytes tx_ids = 3;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.wavesenterprise.BlockAppended.prototype.getTxIdsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * repeated bytes tx_ids = 3;
 * This is a type-conversion wrapper around `getTxIdsList()`
 * @return {!Array<string>}
 */
proto.wavesenterprise.BlockAppended.prototype.getTxIdsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getTxIdsList()));
};


/**
 * repeated bytes tx_ids = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getTxIdsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.wavesenterprise.BlockAppended.prototype.getTxIdsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getTxIdsList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.wavesenterprise.BlockAppended} returns this
 */
proto.wavesenterprise.BlockAppended.prototype.setTxIdsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.wavesenterprise.BlockAppended} returns this
 */
proto.wavesenterprise.BlockAppended.prototype.addTxIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.wavesenterprise.BlockAppended} returns this
 */
proto.wavesenterprise.BlockAppended.prototype.clearTxIdsList = function() {
  return this.setTxIdsList([]);
};


/**
 * optional bytes miner_address = 4;
 * @return {!(string|Uint8Array)}
 */
proto.wavesenterprise.BlockAppended.prototype.getMinerAddress = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes miner_address = 4;
 * This is a type-conversion wrapper around `getMinerAddress()`
 * @return {string}
 */
proto.wavesenterprise.BlockAppended.prototype.getMinerAddress_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMinerAddress()));
};


/**
 * optional bytes miner_address = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMinerAddress()`
 * @return {!Uint8Array}
 */
proto.wavesenterprise.BlockAppended.prototype.getMinerAddress_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMinerAddress()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.wavesenterprise.BlockAppended} returns this
 */
proto.wavesenterprise.BlockAppended.prototype.setMinerAddress = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional int64 height = 5;
 * @return {number}
 */
proto.wavesenterprise.BlockAppended.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.wavesenterprise.BlockAppended} returns this
 */
proto.wavesenterprise.BlockAppended.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 version = 6;
 * @return {number}
 */
proto.wavesenterprise.BlockAppended.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.wavesenterprise.BlockAppended} returns this
 */
proto.wavesenterprise.BlockAppended.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 timestamp = 7;
 * @return {number}
 */
proto.wavesenterprise.BlockAppended.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.wavesenterprise.BlockAppended} returns this
 */
proto.wavesenterprise.BlockAppended.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 fee = 8;
 * @return {number}
 */
proto.wavesenterprise.BlockAppended.prototype.getFee = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.wavesenterprise.BlockAppended} returns this
 */
proto.wavesenterprise.BlockAppended.prototype.setFee = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 block_size = 9;
 * @return {number}
 */
proto.wavesenterprise.BlockAppended.prototype.getBlockSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.wavesenterprise.BlockAppended} returns this
 */
proto.wavesenterprise.BlockAppended.prototype.setBlockSize = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * repeated int32 features = 10;
 * @return {!Array<number>}
 */
proto.wavesenterprise.BlockAppended.prototype.getFeaturesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.wavesenterprise.BlockAppended} returns this
 */
proto.wavesenterprise.BlockAppended.prototype.setFeaturesList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.wavesenterprise.BlockAppended} returns this
 */
proto.wavesenterprise.BlockAppended.prototype.addFeatures = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.wavesenterprise.BlockAppended} returns this
 */
proto.wavesenterprise.BlockAppended.prototype.clearFeaturesList = function() {
  return this.setFeaturesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.wavesenterprise.RollbackCompleted.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wavesenterprise.RollbackCompleted.prototype.toObject = function(opt_includeInstance) {
  return proto.wavesenterprise.RollbackCompleted.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wavesenterprise.RollbackCompleted} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wavesenterprise.RollbackCompleted.toObject = function(includeInstance, msg) {
  var f, obj = {
    returnToBlockSignature: msg.getReturnToBlockSignature_asB64(),
    rollbackTxIdsList: msg.getRollbackTxIdsList_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wavesenterprise.RollbackCompleted}
 */
proto.wavesenterprise.RollbackCompleted.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wavesenterprise.RollbackCompleted;
  return proto.wavesenterprise.RollbackCompleted.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wavesenterprise.RollbackCompleted} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wavesenterprise.RollbackCompleted}
 */
proto.wavesenterprise.RollbackCompleted.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setReturnToBlockSignature(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.addRollbackTxIds(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wavesenterprise.RollbackCompleted.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wavesenterprise.RollbackCompleted.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wavesenterprise.RollbackCompleted} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wavesenterprise.RollbackCompleted.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReturnToBlockSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getRollbackTxIdsList_asU8();
  if (f.length > 0) {
    writer.writeRepeatedBytes(
      2,
      f
    );
  }
};


/**
 * optional bytes return_to_block_signature = 1;
 * @return {!(string|Uint8Array)}
 */
proto.wavesenterprise.RollbackCompleted.prototype.getReturnToBlockSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes return_to_block_signature = 1;
 * This is a type-conversion wrapper around `getReturnToBlockSignature()`
 * @return {string}
 */
proto.wavesenterprise.RollbackCompleted.prototype.getReturnToBlockSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getReturnToBlockSignature()));
};


/**
 * optional bytes return_to_block_signature = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getReturnToBlockSignature()`
 * @return {!Uint8Array}
 */
proto.wavesenterprise.RollbackCompleted.prototype.getReturnToBlockSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getReturnToBlockSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.wavesenterprise.RollbackCompleted} returns this
 */
proto.wavesenterprise.RollbackCompleted.prototype.setReturnToBlockSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * repeated bytes rollback_tx_ids = 2;
 * @return {!(Array<!Uint8Array>|Array<string>)}
 */
proto.wavesenterprise.RollbackCompleted.prototype.getRollbackTxIdsList = function() {
  return /** @type {!(Array<!Uint8Array>|Array<string>)} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * repeated bytes rollback_tx_ids = 2;
 * This is a type-conversion wrapper around `getRollbackTxIdsList()`
 * @return {!Array<string>}
 */
proto.wavesenterprise.RollbackCompleted.prototype.getRollbackTxIdsList_asB64 = function() {
  return /** @type {!Array<string>} */ (jspb.Message.bytesListAsB64(
      this.getRollbackTxIdsList()));
};


/**
 * repeated bytes rollback_tx_ids = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRollbackTxIdsList()`
 * @return {!Array<!Uint8Array>}
 */
proto.wavesenterprise.RollbackCompleted.prototype.getRollbackTxIdsList_asU8 = function() {
  return /** @type {!Array<!Uint8Array>} */ (jspb.Message.bytesListAsU8(
      this.getRollbackTxIdsList()));
};


/**
 * @param {!(Array<!Uint8Array>|Array<string>)} value
 * @return {!proto.wavesenterprise.RollbackCompleted} returns this
 */
proto.wavesenterprise.RollbackCompleted.prototype.setRollbackTxIdsList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!(string|Uint8Array)} value
 * @param {number=} opt_index
 * @return {!proto.wavesenterprise.RollbackCompleted} returns this
 */
proto.wavesenterprise.RollbackCompleted.prototype.addRollbackTxIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.wavesenterprise.RollbackCompleted} returns this
 */
proto.wavesenterprise.RollbackCompleted.prototype.clearRollbackTxIdsList = function() {
  return this.setRollbackTxIdsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.wavesenterprise.AppendedBlockHistory.repeatedFields_ = [3,10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.wavesenterprise.AppendedBlockHistory.prototype.toObject = function(opt_includeInstance) {
  return proto.wavesenterprise.AppendedBlockHistory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.wavesenterprise.AppendedBlockHistory} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wavesenterprise.AppendedBlockHistory.toObject = function(includeInstance, msg) {
  var f, obj = {
    blockSignature: msg.getBlockSignature_asB64(),
    reference: msg.getReference_asB64(),
    txsList: jspb.Message.toObjectList(msg.getTxsList(),
    managed_transaction_pb.Transaction.toObject, includeInstance),
    minerAddress: msg.getMinerAddress_asB64(),
    height: jspb.Message.getFieldWithDefault(msg, 5, 0),
    version: jspb.Message.getFieldWithDefault(msg, 6, 0),
    timestamp: jspb.Message.getFieldWithDefault(msg, 7, 0),
    fee: jspb.Message.getFieldWithDefault(msg, 8, 0),
    blockSize: jspb.Message.getFieldWithDefault(msg, 9, 0),
    featuresList: (f = jspb.Message.getRepeatedField(msg, 10)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.wavesenterprise.AppendedBlockHistory}
 */
proto.wavesenterprise.AppendedBlockHistory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.wavesenterprise.AppendedBlockHistory;
  return proto.wavesenterprise.AppendedBlockHistory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.wavesenterprise.AppendedBlockHistory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.wavesenterprise.AppendedBlockHistory}
 */
proto.wavesenterprise.AppendedBlockHistory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setBlockSignature(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setReference(value);
      break;
    case 3:
      var value = new managed_transaction_pb.Transaction;
      reader.readMessage(value,managed_transaction_pb.Transaction.deserializeBinaryFromReader);
      msg.addTxs(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setMinerAddress(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHeight(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVersion(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFee(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setBlockSize(value);
      break;
    case 10:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedInt32() : [reader.readInt32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addFeatures(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.wavesenterprise.AppendedBlockHistory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.wavesenterprise.AppendedBlockHistory.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.wavesenterprise.AppendedBlockHistory} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.wavesenterprise.AppendedBlockHistory.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBlockSignature_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getReference_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getTxsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      managed_transaction_pb.Transaction.serializeBinaryToWriter
    );
  }
  f = message.getMinerAddress_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = message.getHeight();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getFee();
  if (f !== 0) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = message.getBlockSize();
  if (f !== 0) {
    writer.writeInt32(
      9,
      f
    );
  }
  f = message.getFeaturesList();
  if (f.length > 0) {
    writer.writePackedInt32(
      10,
      f
    );
  }
};


/**
 * optional bytes block_signature = 1;
 * @return {!(string|Uint8Array)}
 */
proto.wavesenterprise.AppendedBlockHistory.prototype.getBlockSignature = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes block_signature = 1;
 * This is a type-conversion wrapper around `getBlockSignature()`
 * @return {string}
 */
proto.wavesenterprise.AppendedBlockHistory.prototype.getBlockSignature_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getBlockSignature()));
};


/**
 * optional bytes block_signature = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getBlockSignature()`
 * @return {!Uint8Array}
 */
proto.wavesenterprise.AppendedBlockHistory.prototype.getBlockSignature_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getBlockSignature()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.wavesenterprise.AppendedBlockHistory} returns this
 */
proto.wavesenterprise.AppendedBlockHistory.prototype.setBlockSignature = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes reference = 2;
 * @return {!(string|Uint8Array)}
 */
proto.wavesenterprise.AppendedBlockHistory.prototype.getReference = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes reference = 2;
 * This is a type-conversion wrapper around `getReference()`
 * @return {string}
 */
proto.wavesenterprise.AppendedBlockHistory.prototype.getReference_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getReference()));
};


/**
 * optional bytes reference = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getReference()`
 * @return {!Uint8Array}
 */
proto.wavesenterprise.AppendedBlockHistory.prototype.getReference_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getReference()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.wavesenterprise.AppendedBlockHistory} returns this
 */
proto.wavesenterprise.AppendedBlockHistory.prototype.setReference = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * repeated Transaction txs = 3;
 * @return {!Array<!proto.wavesenterprise.Transaction>}
 */
proto.wavesenterprise.AppendedBlockHistory.prototype.getTxsList = function() {
  return /** @type{!Array<!proto.wavesenterprise.Transaction>} */ (
    jspb.Message.getRepeatedWrapperField(this, managed_transaction_pb.Transaction, 3));
};


/**
 * @param {!Array<!proto.wavesenterprise.Transaction>} value
 * @return {!proto.wavesenterprise.AppendedBlockHistory} returns this
*/
proto.wavesenterprise.AppendedBlockHistory.prototype.setTxsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.wavesenterprise.Transaction=} opt_value
 * @param {number=} opt_index
 * @return {!proto.wavesenterprise.Transaction}
 */
proto.wavesenterprise.AppendedBlockHistory.prototype.addTxs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.wavesenterprise.Transaction, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.wavesenterprise.AppendedBlockHistory} returns this
 */
proto.wavesenterprise.AppendedBlockHistory.prototype.clearTxsList = function() {
  return this.setTxsList([]);
};


/**
 * optional bytes miner_address = 4;
 * @return {!(string|Uint8Array)}
 */
proto.wavesenterprise.AppendedBlockHistory.prototype.getMinerAddress = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes miner_address = 4;
 * This is a type-conversion wrapper around `getMinerAddress()`
 * @return {string}
 */
proto.wavesenterprise.AppendedBlockHistory.prototype.getMinerAddress_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getMinerAddress()));
};


/**
 * optional bytes miner_address = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getMinerAddress()`
 * @return {!Uint8Array}
 */
proto.wavesenterprise.AppendedBlockHistory.prototype.getMinerAddress_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getMinerAddress()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.wavesenterprise.AppendedBlockHistory} returns this
 */
proto.wavesenterprise.AppendedBlockHistory.prototype.setMinerAddress = function(value) {
  return jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * optional int64 height = 5;
 * @return {number}
 */
proto.wavesenterprise.AppendedBlockHistory.prototype.getHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.wavesenterprise.AppendedBlockHistory} returns this
 */
proto.wavesenterprise.AppendedBlockHistory.prototype.setHeight = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int32 version = 6;
 * @return {number}
 */
proto.wavesenterprise.AppendedBlockHistory.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.wavesenterprise.AppendedBlockHistory} returns this
 */
proto.wavesenterprise.AppendedBlockHistory.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int64 timestamp = 7;
 * @return {number}
 */
proto.wavesenterprise.AppendedBlockHistory.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.wavesenterprise.AppendedBlockHistory} returns this
 */
proto.wavesenterprise.AppendedBlockHistory.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int64 fee = 8;
 * @return {number}
 */
proto.wavesenterprise.AppendedBlockHistory.prototype.getFee = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.wavesenterprise.AppendedBlockHistory} returns this
 */
proto.wavesenterprise.AppendedBlockHistory.prototype.setFee = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional int32 block_size = 9;
 * @return {number}
 */
proto.wavesenterprise.AppendedBlockHistory.prototype.getBlockSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.wavesenterprise.AppendedBlockHistory} returns this
 */
proto.wavesenterprise.AppendedBlockHistory.prototype.setBlockSize = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * repeated int32 features = 10;
 * @return {!Array<number>}
 */
proto.wavesenterprise.AppendedBlockHistory.prototype.getFeaturesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 10));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.wavesenterprise.AppendedBlockHistory} returns this
 */
proto.wavesenterprise.AppendedBlockHistory.prototype.setFeaturesList = function(value) {
  return jspb.Message.setField(this, 10, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.wavesenterprise.AppendedBlockHistory} returns this
 */
proto.wavesenterprise.AppendedBlockHistory.prototype.addFeatures = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 10, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.wavesenterprise.AppendedBlockHistory} returns this
 */
proto.wavesenterprise.AppendedBlockHistory.prototype.clearFeaturesList = function() {
  return this.setFeaturesList([]);
};


goog.object.extend(exports, proto.wavesenterprise);
